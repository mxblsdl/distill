[
  {
    "path": "posts/",
    "title": "Styleized Streets",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "mxblsdl",
        "url": {}
      }
    ],
    "date": "2022-01-30",
    "categories": [],
    "contents": "\nThe following work flow is inspired by some posts I saw on Reddit visualizing the streets of major cities by their suffixes. I decided to do a version for Portland. I came up with my own workflow for creating these stylized maps with R.\nData for streets of Portland can be found on their open data website. This will differ for other cities but most major cities should have open data for various civic categories.\nTo find the street data I search on the keyword ‘centerline’ and found what I was looking for quickly.\nLoad Libraries\n\n\n\nFind and Load Data\nYou could download the data and source it locally, but the sf package makes it easy to interact with a geojson API. Simply point to the endpoint and load as an sf object.\n\n\n\nIt is almost guaranteed that a spatial file you find from an ArcGIS API will have tons of fields you don’t need. I like to drop anything that I won’t need for further analysis.\nAfter inspecting the data, I find the FTTYPE column. This step will take some digging with different datasets.\nPrepare Data\nSelect only the relevant columns for plotting\n\n\n\nNow we need to create the canvas or boundaries of the final plot. City boundaries can be very odd and hard to capture so I’m just going to use a circle around the city center.\nNow we select a point to center the map around. I played around with this a bit using Google Earth and chose a point in the Willamette River. Hard pressing with Google Maps will also give you the lat/lon in decimal degrees.\n\n\n\nCreate a buffer around the chosen point to clip the road data to. The data should really be in a projected coordinate system but this approach still works. The dist value here is arc degrees which is a difficult unit to use, but its essentially a distance value. Projecting the data to a UTM coordinate system is probably a better approach.\nCheck the buffer distance. This was an iterative process to get the dist value correct made easier with {Leaflet}.\n\n\n{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addPolygons\",\"args\":[[[[{\"lng\":[-122.636917,-122.636958113957,-122.637081343139,-122.637286349782,-122.637572571978,-122.637939225211,-122.638385304511,-122.638909587205,-122.639510636271,-122.640186804274,-122.640936237886,-122.641756882962,-122.642646490169,-122.643602621156,-122.644622655236,-122.645703796564,-122.646843081809,-122.648037388269,-122.649283442431,-122.65057782895,-122.651917,-122.653297285008,-122.654714900708,-122.656165961514,-122.657646490169,-122.659152428647,-122.660679649275,-122.662223966049,-122.663781146102,-122.665346921313,-122.666917,-122.668487078687,-122.670052853898,-122.671610033951,-122.673154350725,-122.674681571353,-122.676187509831,-122.677668038486,-122.679119099292,-122.680536714992,-122.681917,-122.68325617105,-122.684550557569,-122.685796611731,-122.686990918191,-122.688130203436,-122.689211344764,-122.690231378844,-122.691187509831,-122.692077117038,-122.692897762114,-122.693647195726,-122.694323363729,-122.694924412795,-122.695448695489,-122.695894774789,-122.696261428022,-122.696547650218,-122.696752656861,-122.696875886043,-122.696917,-122.696875886043,-122.696752656861,-122.696547650218,-122.696261428022,-122.695894774789,-122.695448695489,-122.694924412795,-122.694323363729,-122.693647195726,-122.692897762114,-122.692077117038,-122.691187509831,-122.690231378844,-122.689211344764,-122.688130203436,-122.686990918191,-122.685796611731,-122.684550557569,-122.68325617105,-122.681917,-122.680536714992,-122.679119099292,-122.677668038486,-122.676187509831,-122.674681571353,-122.673154350725,-122.671610033951,-122.670052853898,-122.668487078687,-122.666917,-122.665346921313,-122.663781146102,-122.662223966049,-122.660679649275,-122.659152428647,-122.657646490169,-122.656165961514,-122.654714900708,-122.653297285008,-122.651917,-122.65057782895,-122.649283442431,-122.648037388269,-122.646843081809,-122.645703796564,-122.644622655236,-122.643602621156,-122.642646490169,-122.641756882962,-122.640936237886,-122.640186804274,-122.639510636271,-122.638909587205,-122.638385304511,-122.637939225211,-122.637572571978,-122.637286349782,-122.637081343139,-122.636958113957,-122.636917],\"lat\":[45.526104,45.5245339213127,45.522968146102,45.5214109660488,45.5198666492755,45.5183394286469,45.5168334901688,45.5153529615136,45.5139019007077,45.5124842850078,45.511104,45.5097648289495,45.5084704424312,45.5072243882685,45.5060300818092,45.5048907965644,45.5038096552357,45.5027896211563,45.5018334901687,45.5009438829616,45.5001232378865,45.4993738042743,45.4986976362707,45.4980965872051,45.4975723045111,45.4971262252113,45.496759571978,45.4964733497821,45.496268343139,45.4961451139574,45.496104,45.4961451139574,45.496268343139,45.4964733497821,45.496759571978,45.4971262252113,45.4975723045111,45.4980965872051,45.4986976362707,45.4993738042743,45.5001232378865,45.5009438829616,45.5018334901687,45.5027896211563,45.5038096552357,45.5048907965644,45.5060300818092,45.5072243882685,45.5084704424312,45.5097648289495,45.511104,45.5124842850078,45.5139019007077,45.5153529615136,45.5168334901688,45.5183394286469,45.5198666492755,45.5214109660488,45.522968146102,45.5245339213127,45.526104,45.5276740786873,45.529239853898,45.5307970339512,45.5323413507245,45.5338685713531,45.5353745098312,45.5368550384864,45.5383060992923,45.5397237149922,45.541104,45.5424431710505,45.5437375575688,45.5449836117315,45.5461779181908,45.5473172034356,45.5483983447643,45.5494183788437,45.5503745098312,45.5512641170384,45.5520847621135,45.5528341957256,45.5535103637293,45.5541114127949,45.5546356954888,45.5550817747887,45.555448428022,45.5557346502179,45.555939656861,45.5560628860426,45.556104,45.5560628860426,45.555939656861,45.5557346502179,45.555448428022,45.5550817747887,45.5546356954888,45.5541114127949,45.5535103637293,45.5528341957256,45.5520847621135,45.5512641170384,45.5503745098312,45.5494183788437,45.5483983447643,45.5473172034356,45.5461779181908,45.5449836117315,45.5437375575688,45.5424431710505,45.541104,45.5397237149922,45.5383060992923,45.5368550384864,45.5353745098312,45.5338685713531,45.5323413507245,45.5307970339512,45.529239853898,45.5276740786873,45.526104]}]]],null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":true,\"color\":\"#03F\",\"weight\":5,\"opacity\":0.5,\"fill\":true,\"fillColor\":\"#03F\",\"fillOpacity\":0.2,\"smoothFactor\":1,\"noClip\":false},null,null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addTiles\",\"args\":[\"//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"http://openstreetmap.org\\\">OpenStreetMap<\\/a> contributors, <a href=\\\"http://creativecommons.org/licenses/by-sa/2.0/\\\">CC-BY-SA<\\/a>\"}]}],\"limits\":{\"lat\":[45.496104,45.556104],\"lng\":[-122.696917,-122.636917]}},\"evals\":[],\"jsHooks\":[]}\nThere may be some warnings about the coordinate system being in lat/long and the distance being in degrees\nCrop the roads layer once the buffer area looks good to you.\n\n\n\nThere are lots of suffixes that are not well represented in the data. To keep the legend a reasonable size I’m selecting only the top seven suffixes.\n\n[1] \"AVE\"  \"ST\"   \"RAMP\" \"FWY\"  \"BLVD\" \"RD\"   \"PKWY\"\n\nAgain to keep the legend a reasonable size we set all other suffixes to ‘Other’. I’m also going to reclass RAMP as other. This is an aesthetic choice since on and off ramps aren’t really roads and I want to keep the legend more manageable.\n\n[1] \"Other\" \"ST\"    \"AVE\"   \"PKWY\"  \"FWY\"   \"RD\"    \"BLVD\" \n\nPrep data for plotting\nCreate a vector of colors that is associated with each road type and reclassify the characters to factors. This allows the legend to be in the desired order.\n\n\n\nPlotting\nPlot out the finished product. I put the most time into this part and there are probably other ways to achieve the same results with different ggplot functions. I’ve added comments to help identify what does what. You may have to change the plot.title depending on the output size of the png.\nI used the {cartography} package for colors here and I would say color choice makes a large difference in the final product. There is plenty of room to play around with the output.\nNote: Since first creating this ggplot has been throwing an odd error when I went to recreate in Jan 2022. ggplot can be mostly replaced with a simple plot() call\n\n\n\nFinal Map\nSave output\n\n\n\nThis workflow creates a nice stylized map of street suffixes for Portland that can be extended to any area where you have road data.\n\n\n\n",
    "preview": "posts/styleized-streets_files/figure-html5/unnamed-chunk-9-1.png",
    "last_modified": "2022-01-30T14:54:41-08:00",
    "input_file": "styleized-streets.knit.md"
  }
]
